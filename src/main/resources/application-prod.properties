# Production Profile Configuration

# Database Configuration (PostgreSQL recommended for production)
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Disable H2 console in production
spring.h2.console.enabled=false

# Production Logging (reduced verbosity)
logging.level.root=INFO
logging.level.org.springframework=INFO
logging.level.org.hibernate=WARN
logging.level.com.example.autoprint=INFO

# Disable detailed logging
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# Security headers
server.forward-headers-strategy=framework
server.tomcat.remote-ip-header=x-forwarded-for
server.tomcat.protocol-header=x-forwarded-proto

# Enable HTTPS (if using SSL termination at the load balancer)
server.forward-headers-strategy=framework
server.tomcat.remoteip.remote-ip-header=x-forwarded-for
server.tomcat.remoteip.protocol-header=x-forwarded-proto
server.tomcat.remoteip.internal-proxies=.*

# CORS Configuration (already handled in SecurityConfig, but can be overridden here if needed)
# spring.mvc.cors.allowed-origins=${ALLOWED_ORIGINS:https://auto-print-frontend-eosin.vercel.app}

# File upload settings (adjust based on your needs)
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
